images:
  - name: Choir Seating Chart Builder
    synopsis: Saving hours of manual spreadsheet work each semester.
    description: Built for the BYU choirs, this sheet automates the work of organizing choir members by height and section, calculating section sizes and seats, and putting it all together. It generates a seating chart configured to the user's liking, the same chart in list format, and an alternate chart to mix it up.
    built_with:
      - tech: Google Sheets
      - tech: Google App Script
      - tech: Typescript
    image: choir.png
    link: github.com/xandroxygen/choir-chart-builder

  - name: Canvas Live Events
    synopsis: High-volume streams of activity from Canvas to subscribers.
    description: Keeping customers in the loop is very important at Instructure. Canvas generates "live events" for many actions that are taken by users in the system, and sends them to interested subscribers for their own use. I kept this system from being overwhelmed by the volume of events, and re-wrote key pieces to run much faster.
    built_with:
      - tech: Lambda
      - tech: Kinesis
      - tech: SQS
      - tech: Javascript
      - tech: Internal - Instructure
      - tech: Terraform
    image: live_events.png

  - name: Elysium
    synopsis: Easy deployment of Lambda functions, Instructure style.
    description: Instructure has excellent internal deployment tools, but these tools lack proper support for deploying AWS Lambda functions. Instead of treating Lambda functions as only infrastructure that needs provisioning, Elysium treats the function code as releases that can easily be deployed, changed, and rolled back. Elysium can be added to a project with a simple config file, and has removed a significant amount of friction from deploying the Lambdas associated with Canvas Live Events.
    built_with:
      - tech: Ruby
      - tech: AWS SDK
      - tech: Terraform
      - tech: Internal - Instructure
    image: elysium.png

  - name: Microsoft Whiteboard
    synopsis: Freeform digital canvas for collaboration and drawing.
    description: This whiteboard started as a simple canvas for drawing, but has transformed into a powerful collaboration tool that is bundled with every Microsoft Teams meetings. I contributed to easy object organization and alignment by snapping object rotation to the cardinal directions and snapping an object to other nearby objects, which made it easier to resize objects without unwanted rotation and organize groups of objects neatly.
    built_with:
      - tech: C#
      - tech: UWP
      - tech: Intentional Platform
    image: whiteboard.png
    link: products.office.com/en-us/microsoft-whiteboard

  - name: PandaPom
    synopsis: A hackweek Pomodoro timer.
    description: I enjoy using the Pomodoro technique to manage my time, but wasn't satisfied with the existing timers out there. So, I built my own. This was a hackweek project and took less than a week of work to get running, thanks to Nuxt and the beauty of static sites.
    built_with:
      - tech: Vue
      - tech: Bulma
      - tech: Nuxt
      - tech: Terraform
      - tech: Github Pages
    image: pandapom.png
    link: github.com/xandroxygen/pandapom
    
  - name: Inst-FS
    synopsis: Instructure's secure and scalable file service.
    description: A fundamental change to the way Canvas and other Instructure handles files from users. I introduced a Kinesis -> Lambda batch processing stream, migrated a massive Dynamo database, and provisioned and deployed it to multiple AWS regions. This service consolidated several disparate and insecure code paths for file uploading into one, removing a huge chunk of dead code.
    built_with:
      - tech: Node
      - tech: S3
      - tech: Dynamo
      - tech: Kinesis
      - tech: Lambda
      - tech: Internal - Instructure
      - tech: Terraform
    image: instfs.png

  - name: microparsec
    synopsis: Simple text parser for keywords and regex.
    description: A bare-bones text parser that looks for keywords and regular expressions and plucks them out of the text. Inspired by Todoist's Quick Add functionality, which uses Natural Language Processing (NLP) to understand what you type. This is a very simple version (<100loc!), but was an interesting exercise in using regular expressions.
    built_with:
      - tech: JS
      - tech: Regex
      - tech: Jest
    image: microparsec.png
    link: github.com/xandroxygen/microparsec

  - name: Pace
    synopsis: Rewrite of deprecated Marathon Web UI.
    description: Lingotek depends on Mesos and Marathon for container management, but the Web UI had been marked as deprecated and was lacking needed features. I built this from the ground up as a wrapper around Marathon API calls. It replicates the existing Web UI and provides extended features that reduced a 5-step deployment process (editing JSON!) to 1 click.
    built_with:
      - tech: Node
      - tech: Vue
      - tech: Bulma
      - tech: Docker
      - tech: Marathon
    image: pace.png

  - name: GPA Calculator (Elm)
    synopsis: Easy cumulative GPA calculator built in Elm.
    description: The GPA calculator is my version of a "Hello World" for a language - easy logic, actually does something, and is just complex enough to get a sense for the language and tools. I've been curious about Elm for a while, so I did something about it and built this.
    built_with:
      - tech: Elm
      - tech: Skeleton CSS
    image: elm.png
    link: github.com/xandroxygen/elm-gpa-calc

  - name: GPA Calculator (Swift)
    synopsis: Another GPA Calculator built for iOS.
    description: I wanted to make an iOS app, and needed something simple to test the waters with - enter the trusty GPA calculator. For this, I decided to use Swift alone, with Xcode's Storyboards providing the design.
    built_with:
      - tech: Swift
      - tech: Xcode
    image: swift.jpg
    link: github.com/xandroxygen/ios-gpa-calc

  - name: reload-server-webpack-plugin
    synopsis: Plugin that I forked to expand its abilities.
    description: This plugin helped my team at Instructure drop its dependency on <code>nodemon</code> for live reloading. However, it didn't have the capability to allow arguments on <code>node</code> or the server script. I added those capabilities and submitted a PR. One day, it'll get merged...
    built_with:
      - tech: Webpack
      - tech: ES2017
    image: reload.png
    link: github.com/xandroxygen/reload-server-webpack-plugin

  - name: BYU Flashcards
    synopsis: Quizlet-like website for BYU students.
    description: My team of 3 built this website from the database up to help serve the BYU community by giving them a Quizlet-like website that integrated with BYU's LMS. In addition to scoping and building both the API and front-end, one of my responsibilities was collaborating with designers on features that students would appreciate and use.
    built_with:
      - tech: Backbone
      - tech: Material Design
      - tech: Handlebars
      - tech: SCSS
      - tech: Laravel
    image: flashcards.png
    link: ctl.byu.edu/tool/byu-flashcards

  - name: xandroxygen.github.io
    synopsis: Personal website.
    description: This site is a simple one, built in (mostly) plain HTML and Sass. Originally started in React before realizing that was too complicated. Learned some interesting lessons with my first attempt at a small React app, but development was much easier on a more simple scale.
    built_with:
      - tech: Jekyll
      - tech: Sass
      - tech: Github Pages
    link: github.com/xandroxygen/xandroxygen.github.io